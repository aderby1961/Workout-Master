<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1533383_workout_workout</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Create Exercise Reps</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    //var repNumber = 4;
    var theExerciseStr = getExerciselist(current.getValue('routine'));
    var exercise = theExerciseStr.split(",");

    for (var i = 1; i <= exercise.length; i++) {
        var objExercise = this.getExerciseInfo(exercise[i - 1]);

        for (var j = 1; j <= objExercise.reps; j++) {
          createReps(exercise[i - 1], current.getUniqueValue(), i, j, j);
        }
    }
})(current, previous);

function getExerciselist(routine) {
    if (gs.nil(routine)) {
        return;
    }
    var getExercises = new GlideRecord('x_1533383_workout_routine');
    getExercises.get(routine);


    return getExercises.getValue('exercise_list');
}

function getExerciseInfo(exerciseId) {
    if (gs.nil(exerciseId)) {
        return;
    }
    try {
        var getExercises = new GlideRecord('x_1533383_workout_exercise');
        getExercises.get(exerciseId);
        var obj = {
            "exercise": getExercises.getValue('exercise_name'),
            "reps": getExercises.getValue('standard_rep')
        };

        var str = JSON.stringify(obj);
        var parser = new global.JSONParser();
        var result = parser.parse(str);

        return result;
    } catch (err) {
        gs.addErrorMessage(err);
    }


}

function createReps(exerciseId, workoutId, order, rep, set) {
    if (gs.nil(exerciseId)) {
        return;
    }

    var createRep = new GlideRecord('x_1533383_workout_exercise_rep');
    createRep.initialize();
    createRep.setValue('exercise', exerciseId);
    createRep.setValue('workout', workoutId);
    createRep.setValue('order', order);
    createRep.setValue('set', set);
    var getRepInsert = createRep.insert();

}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>aderbyshire</sys_created_by>
        <sys_created_on>2024-11-28 19:34:16</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>27d8115f83c2121038eaf855eeaad3c2</sys_id>
        <sys_mod_count>38</sys_mod_count>
        <sys_name>Create Exercise Reps</sys_name>
        <sys_overrides/>
        <sys_package display_value="Workout Master" source="x_1533383_workout">3b1d8e278361d21038eaf855eeaad39e</sys_package>
        <sys_policy/>
        <sys_scope display_value="Workout Master">3b1d8e278361d21038eaf855eeaad39e</sys_scope>
        <sys_update_name>sys_script_27d8115f83c2121038eaf855eeaad3c2</sys_update_name>
        <sys_updated_by>aderbyshire</sys_updated_by>
        <sys_updated_on>2024-11-28 23:54:10</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=27d8115f83c2121038eaf855eeaad3c2"/>
</record_update>
